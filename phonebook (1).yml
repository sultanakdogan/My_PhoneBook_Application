AWSTemplateFormatVersion: 2010-09-09

Description: |
  CloudFormation for Phonebook App.

Parameters:

  pVpcID:
    Description: VPC for EC2
    Type: AWS::EC2::VPC::Id

  pAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  pKeyPair:
    Description: KeyPair Name
    Type: AWS::EC2::KeyPair::KeyName

  pSubnets:
    Description: Subnets where EC2 instances are
    Type: List<AWS::EC2::Subnet::Id>

  
Resources:

  rWebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and SSH to the web server
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      VpcId: !Ref pVpcID

  rWebServerLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref pAmiId
        InstanceType: t2.micro
        KeyName: !Ref pKeyPair
        SecurityGroupIds:
          - !GetAtt rWebServerSecurityGroup.GroupId
        UserData:
          Fn::Base64:
            !Sub 
              - |
                #! /bin/bash -x
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                TOKEN="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"
                FOLDER="https://$TOKEN@raw.githubusercontent.com/altazbhanji/myphonebook2/main/Project-004-Phonebook-Application/"
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/phonebook-app.py" -L "$FOLDER"phonebook-app.py
                python3 /home/ec2-user/phonebook-app.py
              - MyDBURI: !GetAtt rDatabaseServer.Endpoint.Address
        TagSpecifications:
        - ResourceType: instance
          Tags: 
            - Key: Name
              Value: WebServer
      LaunchTemplateName: LaunchTemplateForWebServer

  rTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WebServerTargetGroup
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      VpcId: !Ref pVpcID

  rALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP to the load balancer
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      VpcId: !Ref pVpcID

  rALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: PhonebookALB
      Scheme: internet-facing
      SecurityGroups:
      - !GetAtt rALBSecurityGroup.GroupId
      Subnets: !Ref pSubnets
      Type: application

  rListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - TargetGroupArn: !Ref rTargetGroup
        Type: forward
      LoadBalancerArn: !Ref rALB 
      Port: 80
      Protocol: HTTP

  rASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: WebServerASG
      DesiredCapacity: "2"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      AvailabilityZones: !GetAZs ""
      HealthCheckGracePeriod: 300
      HealthCheckType: "ELB"
      LaunchTemplate:
        LaunchTemplateId: !Ref rWebServerLT
        Version: !GetAtt rWebServerLT.LatestVersionNumber
      TargetGroupARNs:
      - !Ref rTargetGroup

  rRDSSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable MySQL connection on port 3306
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !GetAtt rWebServerSecurityGroup.GroupId
      VpcId: !Ref pVpcID

  rDatabaseServer:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "20"
      DBInstanceClass: db.t2.micro
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0
      DBInstanceIdentifier: myphonebook
      DBName: clarusway_phonebook
      Engine: MySQL
      EngineVersion: 8.0.28
      MasterUsername: admin
      MasterUserPassword: Clarusway_1
      Port: "3306"
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !GetAtt rRDSSecGroup.GroupId

#Outputs: